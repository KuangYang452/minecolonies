public net.minecraft.client.gui.components.Button <init>(IIIILnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/Button$OnPress;Lnet/minecraft/client/gui/components/Button$CreateNarration;)V
public net.minecraft.client.gui.components.Button DEFAULT_NARRATION

public net.minecraft.client.multiplayer.ClientAdvancements progress

public net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer armorTrimAtlas
public net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer getArmorModel(Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel;
public net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer usesInnerModel(Lnet/minecraft/world/entity/EquipmentSlot;)Z

public net.minecraft.server.level.ChunkMap visibleChunkMap
public net.minecraft.server.level.DistanceManager tickets
public net.minecraft.server.level.ServerLevel navigatingMobs

public net.minecraft.world.damagesource.CombatTracker entries

public-f net.minecraft.world.entity.ai.goal.GoalSelector availableGoals
public net.minecraft.world.entity.ai.goal.GoalSelector disabledFlags
public net.minecraft.world.entity.ai.goal.GoalSelector lockedFlags
public-f net.minecraft.world.entity.ai.goal.GoalSelector profiler

public net.minecraft.world.entity.animal.Sheep ITEM_BY_DYE

public net.minecraft.world.entity.Entity dimensions
public net.minecraft.world.entity.Entity updateFluidOnEyes()V

public net.minecraft.world.entity.LivingEntity checkBedExists()Z
public net.minecraft.world.entity.LivingEntity detectEquipmentUpdates()V
public net.minecraft.world.entity.LivingEntity updateFallFlying()V
public net.minecraft.world.entity.LivingEntity updateSwimAmount()V

public net.minecraft.world.entity.Mob checkAndHandleImportantInteractions(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult;
public-f net.minecraft.world.entity.Mob goalSelector
public net.minecraft.world.entity.Mob moveControl
public-f net.minecraft.world.entity.Mob targetSelector

public net.minecraft.world.entity.projectile.AbstractArrow shouldFall()Z
public net.minecraft.world.entity.projectile.ThrownPotion applySplash(Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V

public net.minecraft.world.entity.vehicle.AbstractMinecart flipped
public net.minecraft.world.entity.vehicle.AbstractMinecart lerpSteps
public net.minecraft.world.entity.vehicle.AbstractMinecart lerpX
public net.minecraft.world.entity.vehicle.AbstractMinecart lerpXRot
public net.minecraft.world.entity.vehicle.AbstractMinecart lerpY
public net.minecraft.world.entity.vehicle.AbstractMinecart lerpYRot
public net.minecraft.world.entity.vehicle.AbstractMinecart lerpZ

public net.minecraft.world.item.CreativeModeTab displayItemsGenerator

public net.minecraft.world.level.BaseSpawner nextSpawnData
public net.minecraft.world.level.BaseSpawner requiredPlayerRange

public net.minecraft.world.level.block.DoorBlock playSound(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V

public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity isLit()Z
public net.minecraft.world.level.block.entity.BeehiveBlockEntity releaseAllOccupants(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List;
public net.minecraft.world.level.block.entity.BrewingStandBlockEntity brewTime

public net.minecraft.world.level.block.state.BlockBehaviour$Properties hasCollision

# fisherman loot table datagen
public net.minecraft.world.level.storage.loot.ValidationContext reporter
public net.minecraft.world.level.storage.loot.ValidationContext params
public net.minecraft.world.level.storage.loot.ValidationContext resolver
public net.minecraft.world.level.storage.loot.ValidationContext visitedElements
public net.minecraft.world.level.storage.loot.ValidationContext <init>(Lnet/minecraft/util/ProblemReporter;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;Lnet/minecraft/world/level/storage/loot/LootDataResolver;Ljava/util/Set;)V
public-f net.minecraft.world.entity.Entity setRemoved(Lnet/minecraft/world/entity/Entity$RemovalReason;)V

public net.minecraft.resources.ResourceLocation <init>(Ljava/lang/String;Ljava/lang/String;)V

public-f net.minecraft.client.renderer.RenderStateShard setupState
public net.minecraft.world.level.block.Block canSurvive(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z
public net.minecraft.world.entity.projectile.AbstractArrow setPierceLevel(B)V
public net.minecraft.world.entity.projectile.ThrownPotion applySplash(Ljava/lang/Iterable;Lnet/minecraft/world/entity/Entity;)V
public net.minecraft.world.level.block.StemBlock fruit

public net.minecraft.world.level.entity.PersistentEntitySectionManager stopTracking(Lnet/minecraft/world/level/entity/EntityAccess;)V # stopTracking
public net.minecraft.server.level.ServerLevel entityManager # entityManager
public-f net.minecraft.world.entity.Entity setRemoved(Lnet/minecraft/world/entity/Entity$RemovalReason;)V # setRemoved
public net.minecraft.world.level.entity.PersistentEntitySectionManager stopTracking(Lnet/minecraft/world/level/entity/EntityAccess;)V # stopTracking
public net.minecraft.server.level.ServerLevel entityManager # entityManager
public net.minecraft.world.level.block.state.BlockBehaviour hasCollision # hasCollision